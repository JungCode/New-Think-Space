name: Node.js CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  fe-build:  # Sửa tên job để không có khoảng trắng

    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        # Không dùng cache tích hợp ở đây

    # Tạo cache thủ công
    - name: Cache npm dependencies
      uses: actions/cache@v3
      with:
        path: frontend/think-space/node_modules  # Cache thư mục node_modules trong đúng thư mục
        key: ${{ runner.os }}-node-${{ matrix.node-version }}-frontend-think-space
        restore-keys: |
          ${{ runner.os }}-node-${{ matrix.node-version }}-
          
    # Cài dependencies từ đúng thư mục
    - name: Install dependencies
      run: npm ci
      working-directory: frontend/think-space  # Đặt đúng thư mục làm việc

    # Chạy tests từ đúng thư mục
    - name: Run tests
      run: npm test
      working-directory: frontend/think-space

    - name: Install Vercel CLI
      run: npm install --global vercel@latest

    - name: Pull Vercel Environment Information
      run: vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}
      working-directory: frontend/think-space
    
    - name: Build Project Artifacts
      run: vercel build --token=${{ secrets.VERCEL_TOKEN }}
      working-directory: frontend/think-space
    
    - name: Deploy Project Artifacts to Vercel
      run: vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }}
      working-directory: frontend/think-space

  be-build:  # Sửa tên job để không có khoảng trắng

    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        # Không dùng cache tích hợp ở đây

    # Tạo cache thủ công
    - name: Cache npm dependencies
      uses: actions/cache@v3
      with:
        path: backend/node_modules  # Cache thư mục node_modules trong đúng thư mục
        key: ${{ runner.os }}-node-${{ matrix.node-version }}-backend-think-space
        restore-keys: |
          ${{ runner.os }}-node-${{ matrix.node-version }}-
          
    # Cài dependencies từ đúng thư mục
    - name: Install dependencies
      run: npm ci
      working-directory: backend  # Đặt đúng thư mục làm việc

    # Build ứng dụng từ đúng thư mục
    - name: Build application
      run: npm run build --if-present
      working-directory: backend

    # Chạy tests từ đúng thư mục
    - name: Run tests
      run: npm test
      working-directory: backend

    - name: Install railway
      run: npm install -g @railway/cli
      working-directory: backend


    - name: Deploy to Railway
      env:
        RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}  # Lấy token Railway từ GitHub Secrets
      run: |
        npx railway up --env production
      
      
    
